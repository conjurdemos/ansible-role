---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: False
  no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
  vars:
    molecule_file: "{{ lookup('env', 'MOLECULE_FILE') }}"
    molecule_ephemeral_directory: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}"
    molecule_scenario_directory: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}"
    MOLECULE_TEMPLATES_DIRECTORY: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/../templates"
    molecule_yml: "{{ lookup('file', molecule_file) | from_yaml }}"
  tasks:
    - name: Create Dockerfiles from image names
      template:
        src: "{{ MOLECULE_TEMPLATES_DIRECTORY }}/Dockerfile.j2"
        dest: "{{ molecule_ephemeral_directory }}/Dockerfile_{{ item.name | regex_replace('[^a-zA-Z0-9_]', '_') }}"
      with_items: "{{ molecule_yml.platforms }}"
      register: platforms

    - name: Add commands to Dockerfile
      blockinfile:
        path: "{{ molecule_ephemeral_directory }}/Dockerfile_{{ item.item.name | regex_replace('[^a-zA-Z0-9_]', '_') }}"
        block: "{{ lookup('file', '{{ MOLECULE_TEMPLATES_DIRECTORY }}/Dockerfile.{{ item.item.name }}') }}"
      with_items: "{{ platforms.results }}"
      when: item.item.dockercommands is defined

    - name: Discover local Docker images
      docker_image_facts:
        name: "molecule_local/{{ item.name }}"
      with_items: "{{ molecule_yml.platforms }}"
      register: docker_images

    - name: Build an Ansible compatible image
      docker_image:
        path: "{{ molecule_ephemeral_directory }}"
        name: "molecule_local/{{ item.item.name }}"
        dockerfile: "{{ molecule_ephemeral_directory }}/Dockerfile_{{ item.item.name | regex_replace('[^a-zA-Z0-9_]', '_') }}"
        force: "{{ item.item.force | default(True) }}"
      with_items: "{{ platforms.results }}"
      when: platforms.changed or docker_images.results | map(attribute='images') | select('equalto', []) | list | count >= 0

    - name: Create molecule instance(s)
      docker_container:
        name: "{{ item.name }}"
        hostname: "{{ item.name }}"
        image: "molecule_local/{{ item.name }}"
        state: started
        recreate: False
        log_driver: syslog
        entrypoint: "{{ item.entrypoint | default('bash') }}"
        command: "{{ item.command | default('sleep infinity') }}"
        privileged: "{{ item.privileged | default(omit) }}"
        volumes: "{{ item.volumes | default(omit) }}"
        capabilities: "{{ item.capabilities | default(omit) }}"
        env: "{{ item.environment | default({}) }}"
        exposed_ports: "{{ item.expose | default([]) }}"
        published_ports: "{{ item.ports | default([]) }}"
        networks: "{{ item.networks | default([]) }}"
      with_items: "{{ molecule_yml.platforms }}"
